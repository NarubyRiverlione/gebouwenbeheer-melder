name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
    
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Cache node_modules with native bindings
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-native
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-node-${{ matrix.node-version }}-pnpm-

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3

      - name: Install dependencies
        run: |
          if [ ! -f "node_modules/better-sqlite3/build/Release/better_sqlite3.node" ]; then
            echo "Native bindings not found, installing and building..."
            pnpm install --ignore-scripts
          else
            echo "Native bindings found, skipping build"
            pnpm install --prefer-offline
          fi
        env:
          npm_config_build_from_source: true
          PYTHON: python3

      - name: Build better-sqlite3 (if needed)
        run: |
          if [ ! -f "node_modules/better-sqlite3/build/Release/better_sqlite3.node" ]; then
            echo "Building better-sqlite3..."
            cd node_modules/better-sqlite3
            npm run build-release
          else
            echo "better-sqlite3 already built, skipping"
          fi
        env:
          npm_config_build_from_source: true
          PYTHON: python3

      - name: Verify better-sqlite3 build
        run: |
          ls -la node_modules/better-sqlite3/build/
          node -e "const db = require('better-sqlite3')(':memory:'); console.log('better-sqlite3 working!');"

      - name: Run tests
        run: pnpm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: coverage